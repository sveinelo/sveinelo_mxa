-- Tables

BEGIN 
	EXECUTE IMMEDIATE 'DROP TABLE CONTACTINFO CASCADE CONSTRAINTS'; 
	EXCEPTION WHEN OTHERS THEN NULL; 
END;
/

CREATE TABLE CONTACTINFO
(
  ID NUMBER NOT NULL,
  MESSAGEID NUMBER NOT NULL,
  TYPE VARCHAR2(10) NOT NULL,
  ADDRESS VARCHAR2(200) NOT NULL
, CONSTRAINT CONTACTINFO_PK PRIMARY KEY
  (
    ID
  )
  ENABLE
)
;

BEGIN 
	EXECUTE IMMEDIATE 'DROP TABLE LOG CASCADE CONSTRAINTS'; 
	EXCEPTION WHEN OTHERS THEN NULL; 
END;
/

CREATE TABLE LOG
(
  ID NUMBER NOT NULL,
  MESSAGEID NUMBER,
  TIME TIMESTAMP NOT NULL,
  LOGTYPE VARCHAR2(50) NOT NULL,
  LOGMSG VARCHAR2(1024) NOT NULL
, CONSTRAINT LOG_PK PRIMARY KEY
  (
    ID
  )
  ENABLE
)
;

BEGIN 
	EXECUTE IMMEDIATE 'DROP TABLE MESSAGE CASCADE CONSTRAINTS'; 
	EXCEPTION WHEN OTHERS THEN NULL; 
END;
/

CREATE TABLE MESSAGE
(
  ID NUMBER NOT NULL,
  MESSAGEKEY VARCHAR2(80) NOT NULL,
  SENDINGSYSTEM VARCHAR2(15) NOT NULL,
  BATCHSENDING NUMBER(1, 0) NOT NULL,
  DOMAIN VARCHAR2(10) NOT NULL,
  CASEDESCRIPTION VARCHAR2(2000),
  CASEOFFICER VARCHAR2(50),
  PARTICIPANTID VARCHAR2(11) NOT NULL,
  MESSAGEREFERENCE VARCHAR2(40) NOT NULL,
  IDPROC VARCHAR2(40) NOT NULL,
  DUEDATE DATE,
  ALTINNARCHIVE VARCHAR2(50),
  MESSAGEHEADER VARCHAR2(512) NOT NULL,
  MESSAGESUMMARY VARCHAR2(2000) NOT NULL,
  SENTALTINN NUMBER(1, 0) NOT NULL,
  SENTALTINNDATE TIMESTAMP,
  MSG_STATUS NUMBER(2, 0) NOT NULL,
  READDEADLINE DATE NOT NULL,
  OVERDUENOTICESENT NUMBER(1, 0) NOT NULL
, CONSTRAINT MESSAGE_PK PRIMARY KEY
  (
    ID
  )
  ENABLE
)
;

BEGIN 
	EXECUTE IMMEDIATE 'DROP TABLE KEYVALUES CASCADE CONSTRAINTS'; 
	EXCEPTION WHEN OTHERS THEN NULL; 
END;
/

CREATE TABLE KEYVALUES
(
  ID NUMBER NOT NULL,
  KEY VARCHAR2(20) NOT NULL,
  DATEVALUE DATE,
  NUMERICVALUE NUMBER,
  STRINGVALUE VARCHAR2(1020),
  DESCRIPTION VARCHAR2(255)
, CONSTRAINT KEYVALUES_PK PRIMARY KEY
  (
    ID
  )
  ENABLE
)
;

BEGIN 
	EXECUTE IMMEDIATE 'DROP TABLE ATTACHMENT CASCADE CONSTRAINTS'; 
	EXCEPTION WHEN OTHERS THEN NULL; 
END;
/

CREATE TABLE ATTACHMENT
(
  ID NUMBER NOT NULL,
  MESSAGEID NUMBER NOT NULL,
  ATTACHMENT CLOB NOT NULL,
  MIMETYPE VARCHAR2(255) NOT NULL,
  FILENAME VARCHAR2(255) NOT NULL,
  NAME VARCHAR2(255) NOT NULL
, CONSTRAINT ATTACHMENT_PK PRIMARY KEY
  (
    ID
  )
  ENABLE
)
;

ALTER TABLE CONTACTINFO
ADD CONSTRAINT CONTACTINFO_MESSAGE_FK1 FOREIGN KEY
(
  MESSAGEID
)
REFERENCES MESSAGE
(
  ID
)
 ENABLE
;

ALTER TABLE LOG
ADD CONSTRAINT LOG_MESSAGE_FK1 FOREIGN KEY
(
  MESSAGEID
)
REFERENCES MESSAGE
(
  ID
)
 ENABLE
;

ALTER TABLE ATTACHMENT
ADD CONSTRAINT ATTACHMENT_MESSAGE_FK1 FOREIGN KEY
(
  MESSAGEID
)
REFERENCES MESSAGE
(
  ID
)
 ENABLE
;

ALTER TABLE CONTACTINFO
ADD CONSTRAINT CTI_TYPE_CHK CHECK
(TYPE IN ('SMS', 'EMAIL'))
 ENABLE
;

ALTER TABLE MESSAGE
ADD CONSTRAINT MSG_BTS_CHK CHECK
(BATCHSENDING IN (0, 1))
 ENABLE
;

ALTER TABLE MESSAGE
ADD CONSTRAINT MSG_ONS_CHK CHECK
(OVERDUENOTICESENT IN (0, 1))
 ENABLE
;

ALTER TABLE MESSAGE
ADD CONSTRAINT MSG_SAL_CHK CHECK
(SENTALTINN IN (0, 1))
 ENABLE
;

COMMENT ON COLUMN ATTACHMENT.ATTACHMENT IS 'This is the base64  encoded attatchment'
;

CREATE INDEX CTI_MSG_IDX ON CONTACTINFO (MESSAGEID);

CREATE INDEX LOG_MSG_IDX ON LOG (MESSAGEID);

CREATE INDEX MSG_DMN_IDX ON MESSAGE (DOMAIN);

CREATE INDEX MSG_DUE_IDX ON MESSAGE (DUEDATE);

CREATE UNIQUE INDEX MSG_MSK_IDX ON MESSAGE (MESSAGEKEY);

CREATE UNIQUE INDEX MSG_MSR_IDX ON MESSAGE (MESSAGEREFERENCE);

CREATE INDEX MSG_MSTAT_IDX ON MESSAGE (MSG_STATUS);

CREATE INDEX MSG_PID_IDX ON MESSAGE (PARTICIPANTID);

CREATE INDEX MSG_SAD_IDX ON MESSAGE (SENTALTINNDATE);

CREATE INDEX MSG_SAL_IDX ON MESSAGE (SENTALTINN);

CREATE INDEX KEY_KEY_IDX ON KEYVALUES (KEY);

CREATE INDEX ATT_MSG_IDX ON ATTACHMENT (MESSAGEID);

BEGIN 
    EXECUTE IMMEDIATE 'DROP SEQUENCE CONTACTINFO_SEQ'; 
    EXCEPTION WHEN OTHERS THEN NULL; 
END;
/

CREATE SEQUENCE CONTACTINFO_SEQ;

BEGIN 
    EXECUTE IMMEDIATE 'DROP SEQUENCE MESSAGE_SEQ'; 
    EXCEPTION WHEN OTHERS THEN NULL; 
END;
/

CREATE SEQUENCE MESSAGE_SEQ;

BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE KEYVALUES_SEQ'; 
    EXCEPTION WHEN OTHERS THEN NULL; 
END;
/

CREATE SEQUENCE KEYVALUES_SEQ;

BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE LOG_SEQ'; 
    EXCEPTION WHEN OTHERS THEN NULL; 
END;
/

CREATE SEQUENCE LOG_SEQ;

BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE ATTACHMENT_SEQ'; 
    EXCEPTION WHEN OTHERS THEN NULL; 
END;
/

CREATE SEQUENCE ATTACHMENT_SEQ;

